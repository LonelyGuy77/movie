-- MySQL Script generated by MySQL Workbench
-- 11/30/16 17:31:07
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kmoon
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kmoon
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kmoon` DEFAULT CHARACTER SET utf8 ;
USE `kmoon` ;

-- -----------------------------------------------------
-- Table `kmoon`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`movie` (
  `serial` CHAR(10) NOT NULL,
  `title` VARCHAR(100) NULL,
  `content` TEXT(5000) NULL,
  `play_date` DATE NULL,
  `genre` VARCHAR(45) NULL,
  `director` VARCHAR(30) NULL,
  `limit` VARCHAR(20) NULL,
  PRIMARY KEY (`serial`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`actor` (
  `movie_serial` CHAR(10) NOT NULL,
  `actor` VARCHAR(45) NULL,
  INDEX `fk_actor_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_actor_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`poster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`poster` (
  `movie_serial` CHAR(10) NOT NULL,
  `poster` VARCHAR(45) NULL,
  INDEX `fk_poster_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_poster_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`preview`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`preview` (
  `movie_serial` CHAR(10) NOT NULL,
  `preview_file` VARCHAR(45) NULL,
  INDEX `fk_preview_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_preview_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`theater`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`theater` (
  `no` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `theater_name` VARCHAR(20) NULL,
  `zipcode` VARCHAR(10) NULL,
  `address` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NULL,
  PRIMARY KEY (`no`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`theater_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`theater_room` (
  `room_idx` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `theater_no` INT UNSIGNED NOT NULL,
  `theater_room_no` INT UNSIGNED NOT NULL,
  `max_seat` INT UNSIGNED NOT NULL,
  INDEX `fk_table1_theater1_idx` (`theater_no` ASC),
  PRIMARY KEY (`room_idx`),
  CONSTRAINT `fk_table1_theater1`
    FOREIGN KEY (`theater_no`)
    REFERENCES `kmoon`.`theater` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`viewing_time`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`viewing_time` (
  `viewing_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `room_idx` INT UNSIGNED NOT NULL,
  `movie_serial` CHAR(10) NOT NULL,
  `movie_name` VARCHAR(50) NULL,
  `viewing_minute` INT NULL,
  `remain_seat` INT NULL,
  PRIMARY KEY (`viewing_id`),
  INDEX `fk_viewing_time_theater_room1_idx` (`room_idx` ASC),
  INDEX `fk_viewing_time_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_viewing_time_theater_room1`
    FOREIGN KEY (`room_idx`)
    REFERENCES `kmoon`.`theater_room` (`room_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viewing_time_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`reservation_seat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`reservation_seat` (
  `viewing_id` INT UNSIGNED NOT NULL,
  `user_id` VARCHAR(45) NULL,
  `seat_no` VARCHAR(4) NOT NULL,
  INDEX `fk_reservation_seat_viewing_time1_idx` (`viewing_id` ASC),
  CONSTRAINT `fk_reservation_seat_viewing_time1`
    FOREIGN KEY (`viewing_id`)
    REFERENCES `kmoon`.`viewing_time` (`viewing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`movie_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`movie_user` (
  `id` VARCHAR(20) NOT NULL,
  `password` CHAR(43) NULL,
  `name` VARCHAR(10) NULL,
  `birthday` DATE NULL,
  `zipcode` INT UNSIGNED NOT NULL,
  `address` VARCHAR(100) NULL,
  `address2` VARCHAR(100) NULL,
  `phone` INT NULL,
  `email` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`reservation_receipt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`reservation_receipt` (
  `order_no` VARCHAR(50) NOT NULL,
  `paid_money` INT UNSIGNED NOT NULL,
  `movie_user_id` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`order_no`),
  INDEX `fk_reservation_receipt_movie_user1_idx` (`movie_user_id` ASC),
  CONSTRAINT `fk_reservation_receipt_movie_user1`
    FOREIGN KEY (`movie_user_id`)
    REFERENCES `kmoon`.`movie_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`expert_review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`expert_review` (
  `review_no` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `movie_serial` CHAR(10) NOT NULL,
  `title` VARCHAR(100) NULL,
  `content` TEXT(5000) NULL,
  `writer` VARCHAR(40) NULL,
  `wdate` DATE NULL,
  PRIMARY KEY (`review_no`),
  INDEX `fk_expert_review_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_expert_review_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`audience_review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`audience_review` (
  `review_no` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `movie_serial` CHAR(10) NOT NULL,
  `title` VARCHAR(100) NULL,
  `content` TEXT(5000) NULL,
  `writer` VARCHAR(40) NULL,
  `wdate` DATE NULL,
  PRIMARY KEY (`review_no`),
  INDEX `fk_audience_review_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_audience_review_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`question` (
  `no` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NULL,
  `content` TEXT(5000) NULL,
  `writer` VARCHAR(40) NULL,
   kinds VARCHAR(100) NULL,
  `wdate` DATE NULL,
  `check_answer` ENUM('Y', 'N') NULL DEFAULT 'N',
  PRIMARY KEY (`no`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`question_answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`question_answer` (
  `question_no` INT UNSIGNED NOT NULL,
  `title` VARCHAR(100) NULL,
  `content` TEXT(5000) NULL,
  `writer` VARCHAR(40) NULL DEFAULT 'admin',
  `wdate` DATE NULL,
  INDEX `fk_question_copy1_question1_idx` (`question_no` ASC),
  CONSTRAINT `fk_question_copy1_question1`
    FOREIGN KEY (`question_no`)
    REFERENCES `kmoon`.`question` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kmoon`.`available_movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kmoon`.`available_movie` (
  `theater_no` INT UNSIGNED NOT NULL,
  `movie_serial` CHAR(10) NOT NULL,
  INDEX `fk_available_movie_theater1_idx` (`theater_no` ASC),
  INDEX `fk_available_movie_movie1_idx` (`movie_serial` ASC),
  CONSTRAINT `fk_available_movie_theater1`
    FOREIGN KEY (`theater_no`)
    REFERENCES `kmoon`.`theater` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_available_movie_movie1`
    FOREIGN KEY (`movie_serial`)
    REFERENCES `kmoon`.`movie` (`serial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
